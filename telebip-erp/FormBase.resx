<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogout.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>